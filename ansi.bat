@ECHO OFF

REM TO CALL:
REM CALL "utils\ansi.bat"

REM Requirements:
REM None!

REM -----
REM DEFINE COLOURS (v1)
REM -----

ECHO Defining ANSI colours for terminal output...

REM the ANSI 4-bit control character.
SET ANSI_4BIT_CONTROL_CHAR=[

REM Define the reset control character.
SET ANSI_RESET=%ANSI_4BIT_CONTROL_CHAR%0m

REM Define the foreground normal colours.
SET ANSI_FG_BLACK=%ANSI_4BIT_CONTROL_CHAR%30m
SET ANSI_FG_RED=%ANSI_4BIT_CONTROL_CHAR%31m
SET ANSI_FG_GREEN=%ANSI_4BIT_CONTROL_CHAR%32m
SET ANSI_FG_YELLOW=%ANSI_4BIT_CONTROL_CHAR%33m
SET ANSI_FG_BLUE=%ANSI_4BIT_CONTROL_CHAR%34m
SET ANSI_FG_MAGENTA=%ANSI_4BIT_CONTROL_CHAR%35m
SET ANSI_FG_CYAN=%ANSI_4BIT_CONTROL_CHAR%36m
SET ANSI_FG_WHITE=%ANSI_4BIT_CONTROL_CHAR%37m

REM Define the foreground bright colours.
SET ANSI_FG_GRAY=%ANSI_4BIT_CONTROL_CHAR%90m
SET ANSI_FG_BRIGHT_RED=%ANSI_4BIT_CONTROL_CHAR%91m
SET ANSI_FG_BRIGHT_GREEN=%ANSI_4BIT_CONTROL_CHAR%92m
SET ANSI_FG_BRIGHT_YELLOW=%ANSI_4BIT_CONTROL_CHAR%93m
SET ANSI_FG_BRIGHT_BLUE=%ANSI_4BIT_CONTROL_CHAR%94m
SET ANSI_FG_BRIGHT_MAGENTA=%ANSI_4BIT_CONTROL_CHAR%95m
SET ANSI_FG_BRIGHT_CYAN=%ANSI_4BIT_CONTROL_CHAR%96m
SET ANSI_FG_BRIGHT_WHITE=%ANSI_4BIT_CONTROL_CHAR%97m

REM Define the background normal colours.
SET ANSI_BG_BLACK=%ANSI_4BIT_CONTROL_CHAR%40m
SET ANSI_BG_RED=%ANSI_4BIT_CONTROL_CHAR%41m
SET ANSI_BG_GREEN=%ANSI_4BIT_CONTROL_CHAR%42m
SET ANSI_BG_YELLOW=%ANSI_4BIT_CONTROL_CHAR%43m
SET ANSI_BG_BLUE=%ANSI_4BIT_CONTROL_CHAR%44m
SET ANSI_BG_MAGENTA=%ANSI_4BIT_CONTROL_CHAR%45m
SET ANSI_BG_CYAN=%ANSI_4BIT_CONTROL_CHAR%46m
SET ANSI_BG_WHITE=%ANSI_4BIT_CONTROL_CHAR%47m

REM Define the background bright colours.
SET ANSI_BG_GRAY=%ANSI_4BIT_CONTROL_CHAR%100m
SET ANSI_BG_BRIGHT_RED=%ANSI_4BIT_CONTROL_CHAR%101m
SET ANSI_BG_BRIGHT_GREEN=%ANSI_4BIT_CONTROL_CHAR%102m
SET ANSI_BG_BRIGHT_YELLOW=%ANSI_4BIT_CONTROL_CHAR%103m
SET ANSI_BG_BRIGHT_BLUE=%ANSI_4BIT_CONTROL_CHAR%104m
SET ANSI_BG_BRIGHT_MAGENTA=%ANSI_4BIT_CONTROL_CHAR%105m
SET ANSI_BG_BRIGHT_CYAN=%ANSI_4BIT_CONTROL_CHAR%106m
SET ANSI_BG_BRIGHT_WHITE=%ANSI_4BIT_CONTROL_CHAR%107m

REM Define the pre-defined colours for things like success and error messages.

REM Info
SET INFO_COLOUR=%ANSI_FG_BRIGHT_BLUE%

REM Success
SET SUCCESS_COLOUR=%ANSI_FG_BRIGHT_GREEN%

REM Pending
SET PENDING_COLOUR=%ANSI_FG_BRIGHT_CYAN%

REM Warning
SET WARNING_COLOUR=%ANSI_FG_BRIGHT_YELLOW%

REM Error
SET ERROR_COLOUR=%ANSI_FG_BRIGHT_RED%

REM PRINT "ANSI COLOURS DEFINED" In a "beautiful" rainbow. (Dont ask how long this took to write)
ECHO %ANSI_FG_BRIGHT_RED%A%ANSI_FG_BRIGHT_YELLOW%N%ANSI_FG_BRIGHT_GREEN%S%ANSI_FG_BRIGHT_CYAN%I%ANSI_FG_BRIGHT_BLUE% C%ANSI_FG_BRIGHT_MAGENTA%O%ANSI_FG_BRIGHT_RED%L%ANSI_FG_BRIGHT_YELLOW%O%ANSI_FG_BRIGHT_GREEN%U%ANSI_FG_BRIGHT_CYAN%R%ANSI_FG_BRIGHT_BLUE%S %ANSI_FG_BRIGHT_MAGENTA%D%ANSI_FG_BRIGHT_RED%E%ANSI_FG_BRIGHT_YELLOW%F%ANSI_FG_BRIGHT_GREEN%I%ANSI_FG_BRIGHT_CYAN%N%ANSI_FG_BRIGHT_BLUE%E%ANSI_FG_BRIGHT_MAGENTA%D%ANSI_FG_BRIGHT_RED%!%ANSI_RESET%